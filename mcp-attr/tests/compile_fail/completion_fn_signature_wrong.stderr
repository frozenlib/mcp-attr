error: completion function `complete_wrong` must have a `value: &str` parameter
  --> tests/compile_fail/completion_fn_signature_wrong.rs:13:14
   |
13 |     async fn complete_wrong(&self) -> Result<Vec<String>> {
   |              ^^^^^^^^^^^^^^

error[E0061]: this method takes 0 arguments but 2 arguments were supplied
  --> tests/compile_fail/completion_fn_signature_wrong.rs:8:45
   |
8  |     async fn test_prompt(&self, #[complete(.complete_wrong)] msg: String) -> Result<String> {
   |                                             ^^^^^^^^^^^^^^
   |                                             |
   |                                             unexpected argument #1 of type `&CompleteRequestParams`
   |                                             unexpected argument #2 of type `&mut mcp_attr::server::RequestContext`
   |
note: method defined here
  --> tests/compile_fail/completion_fn_signature_wrong.rs:13:14
   |
13 |     async fn complete_wrong(&self) -> Result<Vec<String>> {
   |              ^^^^^^^^^^^^^^
help: remove the extra arguments
   |
8  -     async fn test_prompt(&self, #[complete(.complete_wrong)] msg: String) -> Result<String> {
8  +     async fn test_prompt(&self, #[complete(.g)] msg: String) -> Result<String> {
   |

error[E0308]: mismatched types
 --> tests/compile_fail/completion_fn_signature_wrong.rs:8:45
  |
8 |     async fn test_prompt(&self, #[complete(.complete_wrong)] msg: String) -> Result<String> {
  |                                             ^^^^^^^^^^^^^^ expected `Result<CompleteResult, Error>`, found `Result<Vec<String>, Error>`
  |
  = note: expected enum `std::result::Result<mcp_attr::schema::CompleteResult, mcp_attr::Error>`
             found enum `std::result::Result<Vec<std::string::String>, mcp_attr::Error>`
