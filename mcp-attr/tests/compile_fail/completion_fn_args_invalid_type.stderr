error: unsupported argument type for completion function: `Vec<String>`. Supported types are `&str`, `Option<&str>`, and types that implement `FromStr` like `i32`, `u32`, `f64`, `bool`, `String`, etc.
  --> tests/compile_fail/completion_fn_args_invalid_type.rs:13:66
   |
13 |     async fn complete_invalid(&self, _value: &str, _invalid_arg: Vec<String>) -> Result<Vec<String>> {
   |                                                                  ^^^

error[E0308]: arguments to this method are incorrect
  --> tests/compile_fail/completion_fn_args_invalid_type.rs:8:45
   |
8  |     async fn test_prompt(&self, #[complete(.complete_invalid)] msg: String) -> Result<String> {
   |                                             ^^^^^^^^^^^^^^^^
   |                                             |
   |                                             expected `&str`, found `&CompleteRequestParams`
   |                                             expected `Vec<String>`, found `&mut RequestContext`
   |
   = note: expected reference `&str`
              found reference `&CompleteRequestParams`
   = note:         expected struct `Vec<std::string::String>`
           found mutable reference `&mut mcp_attr::server::RequestContext`
note: method defined here
  --> tests/compile_fail/completion_fn_args_invalid_type.rs:13:14
   |
13 |     async fn complete_invalid(&self, _value: &str, _invalid_arg: Vec<String>) -> Result<Vec<String>> {
   |              ^^^^^^^^^^^^^^^^        ------------  -------------------------

error[E0308]: mismatched types
 --> tests/compile_fail/completion_fn_args_invalid_type.rs:8:45
  |
8 |     async fn test_prompt(&self, #[complete(.complete_invalid)] msg: String) -> Result<String> {
  |                                             ^^^^^^^^^^^^^^^^ expected `Result<CompleteResult, Error>`, found `Result<Vec<String>, Error>`
  |
  = note: expected enum `std::result::Result<mcp_attr::schema::CompleteResult, mcp_attr::Error>`
             found enum `std::result::Result<Vec<std::string::String>, mcp_attr::Error>`
